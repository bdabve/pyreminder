#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Combo boxes are used for getting input from the user with an applied constraint; that is, the user will be shown certain options
in the form of a popup list and he/she can only select from the available choices.
A combo box takes less space when compared with List Widget.
The QComboBox class is used for displaying combo boxes. Not only can you display text through a combo box, but pixmaps too.

[*] Methods provided by the QComboBox

    - setItemText()     : Sets or changes the text of the item in the combo box.
    - removeItem()      : Removes the specific item from the combo box.
    - clear()           : Removes all items from the combo box.
    - currentText()     : Returns the text of the current item, that is, the item that is currently chosen.
    - setCurrentIndex() : Sets the current index of the combo box, that is, it sets the desired item in the combo box as the
                          currently chosen item.
    - count()           : Returns the count of the items in the combo box.
    - setMaxCount()     : Sets the maximum number of items that are allowed in the combo box.
    - setEditable()     : Make the combo box editable, that is, the user can edit items in the combo box.
    - addItem()         : Appends the specified content to the combo box.
    - addItems()        : Appends each of the strings supplied in the text to the combo box.
    - itemText()        : Returns the text at the specified index location in the combo box.
    - currentIndex()    : Returns the index location of the currently chosen item in the combo box.
                          If the combo box is empty or no item is currently chosen in the combo box,
                          the method will return â€“1 as the index.

[*] Signals that are generated by QComboBox:

    - currentIndexChanged() : When the index of the combo box is changed, that is, the user selects some new item in the combo box.
    - activated()           : Emitted when the index is changed by the user.
    - highlighted()         : Emitted when the user highlights an item in the combo box.
    - editTextChanged()     : Emitted when the text of an editable combo box is changed.
"""

import sys
from PyQt5.QtWidgets import QApplication, QDialog
from headers.demoComboBox import *


class MyForm(QDialog):

    def __init__(self):
        super().__init__()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)

        self.ui.comboBoxAccountType.currentIndexChanged.connect(self.disp_account_type)

        self.show()

    def disp_account_type(self):
        comboBox = self.ui.comboBoxAccountType
        self.ui.labelAccountType.setText('Account Type: {}, {}'.format(comboBox.currentIndex(), comboBox.currentText()))


if __name__ == '__main__':
    app = QApplication(sys.argv)
    w = MyForm()
    w.show()
    sys.exit(app.exec_())
